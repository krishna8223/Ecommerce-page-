import Head from 'next/head'
import ProductCard from '../components/productCard';
import { wrapper } from '../store/store';
import { useDispatch } from 'react-redux';
import { save } from '../store/cagtagorysSlice';
import { update } from '../store/isUserSlice';
import { useState, useEffect, useRef } from 'react'
import { FcFilledFilter } from 'react-icons/fc'



export default function Home({ data }) {

  const { allProducts, allCatogories: categorys } = data

  const [products, setproducts] = useState({ products: allProducts, state: 'loaded' })
  const [searchCat, setSearchCat] = useState('All Products')

  const dispatch = useDispatch()
  const categoriesAll = useRef([])
  useEffect(() => {
    dispatch(save(categorys))
  }, [])


  const changeCat = async (id, element) => {

    if (id == 'all') {
      setproducts({ products: allProducts, state: 'loaded' })
      setSearchCat('All')
      return
    }
    setproducts({ state: 'loading' })
    const catProducts = await fetch(`https://fakestoreapi.com/products/category/${id}`)
    const catproductsResult = await catProducts.json()
    setSearchCat(id)
    setproducts({ products: catproductsResult, state: 'loaded' })
  }



  return (

    <div className=''>
      <Head>
        <title>Shopping</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='flex mt-1 flex-wrap gap-4  bg-slate-900 py-8 justify-around'>
        <button onClick={() => { changeCat('all', this) }} ref={(element) => { categoriesAll.current[this] = element }} className='text-3xl p-4 text-white rounded-lg bg-orange-700 hover:bg-orange-600 duration-100' >All Products</button>
        {categorys.map((e, i) => {
          return <button key={i} ref={(element) => { categoriesAll.current[e] = element }} onClick={() => { changeCat(e, this) }} className='text-3xl p-4 text-white rounded-lg bg-orange-700 hover:bg-orange-600 duration-300' >{e}</button>
        })
        }
      </div>
      <div className="filters flex justify-between px-12 items-center">

        <p className='text-4xl , my-8 text-gray-600'>Showing <span className='text-orange-400'> {searchCat} </span></p>
        <div>
          <button className='text-4xl'><FcFilledFilter/></button>
        </div>
      </div>
      {products.state == 'loaded' ?

        <div className=" p-12 all-products place-items-center bg-slate-100 md:grid-cols-2 lg:grid-cols-3 gap-32 grid ">
          {products.products.map((e) => {
            return <ProductCard key={e.id} data={e} />
          })}
        </div>
        :
        <h1 className='text-5xl text-center mt-[3rem]'>Loading...</h1>
      }


    </div>
  )
}




export const getServerSideProps = wrapper.getServerSideProps(store => async (context) => {

  const user = context.req.cookies.user
  if (user) {
    store.dispatch(update({ active: true, name: JSON.parse(user).userName }))
  }

  const product = fetch('https://fakestoreapi.com/products')
  const category = fetch('https://fakestoreapi.com/products/categories')
  const [products, categorys] = await Promise.all([product, category])
  const allProducts = await products.json()
  const allCatogories = await categorys.json()
  // const [, allCatogories] = await Promise.all([pr, ca])
  const data = {
    allProducts, allCatogories
  }

  return {
    props: { data }
  }



});
